{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","date","Date","Footer","getFullYear","Note","props","className","title","content","onClick","event","onDelete","id","preventDefault","CreateArea","React","useState","todo","setTodo","handleChange","target","name","value","prevValue","onChange","placeholder","rows","onChecked","App","items","setItem","deleteItem","index","filter","item","idx","map","key","ReactDOM","render","document","querySelector"],"mappings":"wMAMeA,MAJf,WACI,OAAO,gCAAQ,wCCDbC,EAAK,IAAIC,KAMAC,MALf,WACI,OAAQ,gCACJ,oCAAYF,EAAKG,iBCQVC,MAXf,SAAcC,GAKV,OAAQ,yBAAKC,UAAU,QACnB,4BAAKD,EAAME,OACX,2BAAIF,EAAMG,SACV,4BAAQC,QAPZ,SAAkBC,GACdL,EAAMM,SAASN,EAAMO,IACrBF,EAAMG,mBAKN,YCqCOC,MA7Cf,SAAoBT,GAChB,MAAoBU,IAAMC,SAAS,CAC/BT,MAAM,GACNC,QAAQ,KAFZ,mBAAMS,EAAN,KAAWC,EAAX,KAKA,SAASC,EAAaT,GAClB,MAAmBA,EAAMU,OAAlBC,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,MAEZJ,GAAQ,SAACK,GACL,MAAU,UAAPF,EACS,CACHd,MAAMe,EACNd,QAAQe,EAAUf,SAGZ,YAAPa,EACG,CACHd,MAAMgB,EAAUhB,MAChBC,QAAQc,QAHX,KAkBf,OACE,6BACE,8BACE,2BAAOE,SAAUL,EAAcE,KAAK,QAAQI,YAAY,QAAQH,MAAOL,EAAKV,QAC5E,8BAAUiB,SAAUL,EAAcE,KAAK,UAAUI,YAAY,iBAAiBC,KAAK,IAAIJ,MAAOL,EAAKT,UACnG,4BAASC,QAdb,SAAiBC,GACbL,EAAMsB,UAAUV,GAChBC,EAAQ,CAACX,MAAM,GAAGC,QAAQ,KAC1BE,EAAMG,mBAWN,UCLOe,MA9Bf,WACI,MAAqBb,IAAMC,SAAS,IAApC,mBAAMa,EAAN,KAAYC,EAAZ,KAMA,SAASC,EAAWC,GAChBF,GAAQ,SAACP,GACP,OAAQA,EAAUU,QAAO,SAACC,EAAKC,GACzB,OAAOA,IAAMH,QAI3B,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CACIL,UAhBN,SAAiBO,GACbJ,GAAQ,SAACP,GACL,MAAM,GAAN,mBAAWA,GAAX,CAAqBW,UAgB1BL,EAAMO,KAAI,SAACF,EAAKC,GACf,OAAO,kBAAC,EAAD,CAAME,IAAK,EAAGzB,GAAIuB,EAAI5B,MAAO2B,EAAK3B,MAAOC,QAAS0B,EAAK1B,QAC9DG,SAAUoB,OAGZ,kBAAC,EAAD,QC3BNO,IAASC,OAAO,kBAAC,EAAD,MAAOC,SAASC,cAAc,W","file":"static/js/main.5e2b78db.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header(){\r\n    return <header><h1>Trello</h1></header>\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst date=new Date();\r\nfunction Footer(){\r\n    return (<footer>\r\n        <p>&#169;  {date.getFullYear()}</p>\r\n    </footer>)\r\n}\r\nexport default Footer;","import React from \"react\";\r\n\r\nfunction Note(props){\r\n    function goDelete(event){\r\n        props.onDelete(props.id);\r\n        event.preventDefault();\r\n    }\r\n    return (<div className=\"note\">\r\n        <h1>{props.title}</h1>\r\n        <p>{props.content}</p>\r\n        <button onClick={goDelete}>DELETE</button>\r\n    </div>)\r\n}\r\nexport default Note;","import React from \"react\";\r\n\r\nfunction CreateArea(props) {\r\n    const[todo,setTodo]=React.useState({\r\n        title:\"\",\r\n        content:\"\"\r\n    });\r\n    \r\n    function handleChange(event){\r\n        const {name,value}=event.target\r\n\r\n        setTodo((prevValue)=>{\r\n            if(name===\"title\"){\r\n                 return {\r\n                     title:value,\r\n                     content:prevValue.content\r\n                 }\r\n            }\r\n            else if(name===\"content\"){\r\n                return {\r\n                    title:prevValue.title,\r\n                    content:value\r\n                }\r\n                  \r\n            }\r\n        })\r\n    }\r\n    function addNote(event){\r\n        props.onChecked(todo);\r\n        setTodo({title:\"\",content:\"\"})\r\n        event.preventDefault();\r\n    }\r\n    function addItem(item){\r\n        console.alert(item.title,item.content);\r\n    }\r\n    \r\n  return (\r\n    <div>\r\n      <form>\r\n        <input onChange={handleChange} name=\"title\" placeholder=\"Title\" value={todo.title}/>\r\n        <textarea onChange={handleChange} name=\"content\" placeholder=\"Take a note...\" rows=\"3\" value={todo.content} />\r\n        <button  onClick={addNote}>Add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateArea;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Note from \"./Note\";\r\nimport CreateArea from \"./CreateArea\";\r\n\r\nfunction App() {\r\n    const[items,setItem]=React.useState([]);\r\n    function addItem(item){\r\n        setItem((prevValue)=>{\r\n            return [...prevValue,item];\r\n        })\r\n    }\r\n    function deleteItem(index){\r\n        setItem((prevValue)=>{\r\n          return  prevValue.filter((item,idx)=>{\r\n                return idx!==index;\r\n            })\r\n        })\r\n    }\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <CreateArea \r\n          onChecked={addItem}\r\n      />\r\n      {items.map((item,idx)=>{\r\n        return <Note key={1} id={idx}title={item.title} content={item.content}\r\n        onDelete={deleteItem} />\r\n      })}\r\n      \r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App/>,document.querySelector(\"#root\"));\n\n//CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.\n\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\n\n//This is the end result you're aiming for:\n//https://pogqj.csb.app/\n"],"sourceRoot":""}